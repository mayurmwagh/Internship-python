✅ 1. On-Demand Instances

Use case: Short-term or unpredictable workloads.

Billing: Pay by the second or hour with no long-term commitment.

Best for: Development, testing, or workloads that cannot be interrupted.

✅ 2. Reserved Instances (RIs)
Use case: Predictable workloads that run continuously.

Billing: Commit for 1 or 3 years in exchange for a significant discount (up to 75%) compared to On-Demand.

Types:

Standard RIs: Highest discount, less flexibility.

Convertible RIs: Can change instance type, family, OS, etc.

Payment Options:

All Upfront (AURI)

Partial Upfront (PURI)

No Upfront (NURI)

✅ 3. Savings Plans
Use case: Similar to RIs, but more flexible.

Billing: Commit to a consistent amount of compute usage (e.g., $100/hr) for 1 or 3 years.

Types:

Compute Savings Plans: Most flexible, applies across EC2, Fargate, Lambda.

EC2 Instance Savings Plans: Less flexible, tied to instance family and region.

✅ 4. Spot Instances
Use case: Flexible, fault-tolerant, stateless workloads like big data, batch jobs, CI/CD.

Billing: Up to 90% cheaper than On-Demand.

Caution: Can be interrupted by AWS with a 2-minute warning if capacity is needed.

✅ 5. Dedicated Hosts
Use case: Regulatory compliance, licensing requirements (e.g., BYOL).

Billing: Physical servers dedicated to you.

Benefit: Full visibility into and control over your hardware.

✅ 6. Dedicated Instances
Use case: Instance-level isolation for compliance/security needs.

Billing: Run on hardware that is dedicated to you, but unlike Dedicated Hosts, you don’t control the physical server.



NIC


What is an ENI in AWS?
An Elastic Network Interface (ENI) is a virtual network card that AWS uses to provide networking capabilities to EC2 instances within a VPC. It's essentially the same concept as a NIC in physical machines, but implemented virtually in the AWS cloud.

Each EC2 instance comes with one default ENI when it's launched, called the primary network interface. However, based on the instance type, you can attach multiple additional ENIs to the same instance.

Core Components of an ENI
An ENI includes:

One or more private IPv4 addresses (a primary one and optional secondary ones).

Optionally, one Elastic IP address that can be mapped to the primary private IP.

A MAC address, which stays fixed and helps maintain identity during failover.

One or more security groups that control inbound and outbound traffic.

A description and identifier for easy tracking in your AWS environment.

How ENIs Work
ENIs are tied to a subnet in a specific Availability Zone. You can:

Create ENIs manually.

Attach or detach them from instances at runtime.

Move them from one EC2 instance to another (for high availability or failover).

An ENI retains its configuration, such as IP addresses and security groups, even when it's not attached to an instance. This allows you to pre-configure network settings and dynamically move the interface between instances as needed.

Different Types of Network Interfaces in AWS
There are four primary types of virtual network interfaces:

Primary ENI: This is automatically created and attached when an instance is launched. It cannot be detached while the instance is running.

Secondary ENI: These are additional interfaces that you manually create and attach to instances. They're useful when you need the instance to be connected to multiple subnets or need multiple IP configurations.

Trunk ENI: Used primarily with container-based workloads (like ECS) or advanced networking scenarios. It supports traffic from multiple virtual interfaces, each using VLAN tags.

Elastic Fabric Adapter (EFA): A special high-performance NIC used for applications requiring extremely low latency and high throughput, such as scientific computing or large-scale machine learning.

Common Use Cases for ENIs
High availability and failover: You can move an ENI from a failed EC2 instance to a standby instance in the same AZ, preserving the IP address and security settings.

Separation of traffic: You might use one ENI for application traffic, another for management or monitoring traffic, and another for storage.

Network appliances: Instances functioning as routers, firewalls, or NAT gateways might need multiple ENIs for different networks.

Security isolation: By assigning separate security groups to different ENIs, you can better control and isolate traffic types.

Traffic Mirroring: With ENIs, you can mirror network traffic from EC2 instances and send it to a monitoring appliance for inspection or analysis.

ENI Limits and Scaling
The number of ENIs and the number of IP addresses each ENI can support depends on the EC2 instance type. For example:

A t2.micro instance supports 2 ENIs with 2 IP addresses.

A c5.9xlarge might support 8 or more ENIs and up to 50 IPs per ENI.

These limits are important when designing systems that rely heavily on networking (like load balancers, routers, etc.).

